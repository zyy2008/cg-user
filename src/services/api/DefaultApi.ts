/**
 * 选课
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import ajax, { AjaxPromise, ExtraFetchParams } from '@ajax';
import * as models from '../model/models';

/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */

/**
  */
export type ParamsBodyteacherAddPost = models.Body;
/**
  * @description teacherDeleteIdPost参数
  * @property `id` 
  */
export interface ParamsteacherDeleteIdPost {
  // pathParams
  /**
   * 
   */
  id: string;
}
/**
  */
export type ParamsBodyteacherListGet = models.Body1;

export class DefaultApi {
  protected $basePath = ''.replace(/\/$/, '');

  public constructor(basePath?: string) {
    if (basePath !== undefined) {
      this.$basePath = basePath.replace(/\/$/, '');
    }
  }

  /**
   * 
   * @summary 新增教师
   
   * @param data: ParamsBodyteacherAddPost
   * @param opt ajax config
   * @returns any
   */
  public teacherAddPost = (
    
    data: ParamsBodyteacherAddPost,opt?: ExtraFetchParams
  ) : AjaxPromise<any>  => {
    const url = this.$basePath + `/teacher/add`;
    const p: any = {};
    p.data = data;
    return ajax.ajax({
      ...opt,
      method: 'POST',
      url,
      ...p
    });
  }
  /**
   * 
   * @summary 删除教师
   * @param params ParamsteacherDeleteIdPost
   
   * @param opt ajax config
   * @returns any
   */
  public teacherDeleteIdPost = (
    params: ParamsteacherDeleteIdPost,
    opt?: ExtraFetchParams
  ) : AjaxPromise<any>  => {
    const {
    id,
} = params;
    const url = this.$basePath + `/teacher/delete/${id}`;
    const p: any = {};
    ajax.check(params.id, 'id');
    return ajax.ajax({
      ...opt,
      method: 'POST',
      url,
      ...p
    });
  }
  /**
   * 
   * @summary 教师列表
   
   * @param data: ParamsBodyteacherListGet
   * @param opt ajax config
   * @returns any
   */
  public teacherListGet = (
    
    data: ParamsBodyteacherListGet,opt?: ExtraFetchParams
  ) : AjaxPromise<any>  => {
    const url = this.$basePath + `/teacher/list`;
    const p: any = {};
    p.data = data;
    return ajax.ajax({
      ...opt,
      method: 'GET',
      url,
      ...p
    });
  }
}

export default new DefaultApi();